async def multiplay(a, b):
    return a * b

if __name__ == '__main__':
# 1. Дан многострочный файл txt
# а) разбить файл на N(вводится с клавиатуры) файлов построчно
# б) разбить файл на несколько файлов по N строк
    N = int(input('N = '))
    # filename = 'Onegin.txt'
    with open('Onegin.txt', 'r', encoding= 'utf-8') as file:
        lines = [line.strip() for line in file]

    print(lines)

# 2. В файле записано стихотворение. Выведите его на экран, а также
# укажите, каких слов в нем больше: начинающихся на гласную или на
# согласную букву (без учета регистра)?


# 3. Дан файл с текстом, необходимо в проанализировать файл и сказать
# сколько слов и букв в каждой строке


# *4. Дан CSV файл с данными о товарах (article, title, description, price)
# Необходимо считать файл, привести к списку словарей, выполнить
# приведение типов значений атрибута price, провести валидацию данных
# с помощью Pydantic, не верные записи вывести в другой файл, а из
# списка удалить


# *5. Шифр Вернама
# функция ord возвращает номер символа согласно таблицы кодировки
# функция bin дает бинарное представление десятичного числа в
# двоичном
# Задача:
# Даны два файла с текстом одинаковой длинны, первый файл -
# сообщение которое необходимо закодировать, второй файл - ключ
# кодирования
# Необходимо закодировать сообщение с помощью шифра Вернама
# Пример:
# сообщение: LONDON
# ключ: SYSTEM
# В бинарном:
# сообщение: 1001100 1001111 1001110 1000100 1001111 1001110
# ключ: 1010011 1011001 1010011 1010100 1000101 1001101
# ответ: 00011111 00010110 00011101 00010000 00001010 00000011
# А теперь принцип шифра, необходимо сравнить каждый бит, если биты
# совпали, то на выходе получаем 0, если не совпали - 1

